#include <WiFi101.h> 
#include<WiFiSSLClient.h> 
#include "ThingSpeak.h" 
const char* ssid = SECRET_SSID;    //  your network SSID (name) 
const char* password = SECRET_PSWD;  // your network password 
WiFiClient  ThingSpeakClient; 
unsigned long myChannelNumber = 356392; 
const char * myWriteAPIKey = SECRET_WRITE_API; 
int lightPin = A0; //the analog pin the light sensor is connected to 
int tempPin = A1; //the analog pin the TMP36's Vout (sense) pin is connected to 
int moisturePin = A2; 
void setup() { 
 Serial.begin(9600); 
 while (!Serial); 
 delay(2000); 
 Serial.print("Connecting Wifi: "); 
 Serial.println(ssid); 
 while (WiFi.begin(ssid, password) != WL_CONNECTED) { 
   Serial.print("."); 
   delay(500); 
 } 
 Serial.println(""); 
 Serial.println("WiFi connected"); 
 ThingSpeak.begin(ThingSpeakClient);
} 
void loop() { 
 ThingSpeak.setField(1, get_light()); 
 ThingSpeak.setField(2, get_temperature()); 
 ThingSpeak.setField(3, get_average_moisture()); 
 ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); 
 Serial.println("message sent to cloud"); 
 delay(60000); // send values every 1 minute 
} 
float get_temperature() { 
 int reading = analogRead(tempPin); 
 float voltage = reading * 3.3; 
 voltage /= 1024.0; 
 // Print tempeature in Celsius 
 float temperatureC = (voltage - 0.5) * 100 ; //converting from 10 mv per degree wit 500 mV offset 
 // Convert to Fahrenheit 
 float temperatureF = (temperatureC * 9.0 / 5.0) + 32.0; 
 return temperatureC; 
}
int get_average_moisture() { // make an average of 10 values to be more accurate 
 int tempValue = 0; // variable to temporarly store moisture value 
 for (int a = 0; a < 10; a++) { 
   tempValue += analogRead(moisturePin); 
   delay(10); 
 } 
 return tempValue / 10; 
} 
int get_light() { 
 int light_value = analogRead(A0); 
 return light_value; 
} 
